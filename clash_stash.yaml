# 机场订阅，名称不能重复
proxy-providers:
  Airport_01:
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 43200
    proxy: 🟢 直连
    url: "oldurl"

# 用于下载订阅时指定UA
global-ua: clash.meta

# 全局配置
# port: 7890
# socks-port: 7891
# redir-port: 7892
mixed-port: 7890
tproxy-port: 7894
ipv6: true
allow-lan: true
unified-delay: true
tcp-concurrent: true

geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 48
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"

# 控制面板
external-controller: 0.0.0.0:9090
secret: "123456"
external-ui: ui
external-ui-url: "https://gh-proxy.com/github.com/MetaCubeX/yacd/archive/gh-pages.zip"

# 匹配进程 always/strict/off
find-process-mode: strict
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 30

# 策略组选择和fakeip缓存
profile:
  store-selected: true
  store-fake-ip: true

# 流量嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"

# 代理模式
tun:
  enable: true
  stack: mixed
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:53
  ipv6: false
  respect-rules: true
  # 模式切换 redir-host / fake-ip
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  # 模式切换 whitelist/blacklist
  # 黑名单模式表示如果匹配成功则不返回 Fake-IP, 白名单模式时只有匹配成功才返回 Fake-IP
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "+.lan"
    - "+.local"
    - geosite:private
    - geosite:cn
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver-policy:
    "rule-set:private_domain,cn_domain":
      - 223.5.5.5
    "rule-set:geolocation-!cn":
      - "https://dns.cloudflare.com/dns-query"

proxies:
  - name: "🟢 直连"
    type: direct
    udp: true

# 锚点
pr:
  &pr {
    type: select,
    proxies: [🚀 节点选择, ♻️ 自动选择, REJECT],
    include-all: true,
  }
# 策略组
# https://wiki.metacubex.one/config/proxy-groups/
proxy-groups:
  - {
      name: ♻️ 自动选择,
      type: url-test,
      lazy: false,
      url: http://www.google.com/generate_204,
      interval: 3600,
      tolerance: 100,
      disable-udp: false,
      include-all: true,
      filter: '^(\[\w+\])?[A-z]\+?\.(\[[0-3](\.\d+)?[xX倍]\]\.?)?[A-z]{2,}.*$',
    }
  - {
      name: 🚀 节点选择,
      type: select,
      proxies: [♻️ 自动选择, REJECT],
      include-all: true,
    }
  - { name: 🌍 国外媒体, <<: *pr }
  - { name: 📲 社交软件, <<: *pr }
  - { name: 🤖 ChatGPT, <<: *pr }
  - { name: 🐟 漏网之鱼, <<: *pr }
  - { name: Ⓜ️ 微软云盘, <<: *pr }
  - { name: Ⓜ️ 微软服务, <<: *pr }
  - { name: 🎮 游戏论坛, <<: *pr }
  - { name: 🎮 游戏代理, <<: *pr }
  - { name: 🍎 Apple, <<: *pr }
  - { name: 🧱 砖块代理, <<: *pr }
  - { name: 🎯 全球直连, type: select, proxies: [🟢 直连, REJECT, 🚀 节点选择] }
rules:
  - RULE-SET,owngame,🎮 游戏代理
  - RULE-SET,owngamecom,🎮 游戏论坛
  - RULE-SET,own,🧱 砖块代理
  - RULE-SET,ownban,REJECT
  - RULE-SET,owndirect,🟢 直连
  - RULE-SET,ownmedia,🌍 国外媒体
  - RULE-SET,ownproxy,🚀 节点选择
  - RULE-SET,private_domain,🟢 直连
  - RULE-SET,SteamCN_No_Resolve,🟢 直连
  - RULE-SET,GameDownloadCN_No_Resolve,🟢 直连
  - RULE-SET,Steam_No_Resolve,🎮 游戏论坛
  - RULE-SET,Epic_No_Resolve,🎮 游戏论坛
  - RULE-SET,Copilot_No_Resolve,🤖 ChatGPT
  - RULE-SET,BardAI_No_Resolve,🤖 ChatGPT
  - RULE-SET,ai,🤖 ChatGPT
  - RULE-SET,Apple,🍎 Apple
  - RULE-SET,OneDrive_No_Resolve,Ⓜ️ 微软云盘
  - RULE-SET,microsoft_domain,Ⓜ️ 微软服务
  - RULE-SET,Porn,🌍 国外媒体
  - RULE-SET,TikTok_No_Resolve,🌍 国外媒体
  - RULE-SET,GlobalMedia_Classical_No_Resolve,🌍 国外媒体
  - RULE-SET,netflix_ip,🌍 国外媒体,no-resolve
  - RULE-SET,Telegram_No_Resolve,📲 社交软件
  - RULE-SET,Twitter_No_Resolve,📲 社交软件
  - RULE-SET,Instagram_No_Resolve,📲 社交软件
  - RULE-SET,Facebook_No_Resolve,📲 社交软件
  - RULE-SET,telegram_ip,📲 社交软件,no-resolve
  - RULE-SET,geolocation-!cn,🚀 节点选择
  - RULE-SET,Proxy_Classical,🚀 节点选择
  - RULE-SET,cn_domain,🎯 全球直连
  - RULE-SET,cn_ip,🎯 全球直连
  - MATCH,🐟 漏网之鱼
rule-anchor:
  ip: &ip { type: http, interval: 86400, behavior: ipcidr, format: mrs }
  domain: &domain { type: http, interval: 86400, behavior: domain, format: mrs }
  qcy: &qcy { type: http, interval: 86400, behavior: domain, format: text }
  class:
    &class { type: http, interval: 86400, behavior: classical, format: yaml }
  classt:
    &classt { type: http, interval: 86400, behavior: classical, format: text }
rule-providers:
  owngame:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/xqXQzzz1/clashpref/main/own/owngame.yaml",
    }
  owngamecom:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/xqXQzzz1/clashpref/main/own/owngamecom.yaml",
    }
  own:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/xqXQzzz1/clashpref/main/own/own.yaml",
    }
  ownban:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/xqXQzzz1/clashpref/main/own/ownban.yaml",
    }
  owndirect:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/xqXQzzz1/clashpref/main/own/owndirect.yaml",
    }
  ownmedia:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/xqXQzzz1/clashpref/main/own/ownmedia.yaml",
    }
  ownproxy:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/xqXQzzz1/clashpref/main/own/ownproxy.yaml",
    }
  private_domain:
    {
      <<: *domain,
      url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs",
    }
  microsoft_domain:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Microsoft/Microsoft_No_Resolve.yaml",
    }
  ai:
    {
      <<: *classt,
      url: "https://gcore.jsdelivr.net/gh/Coldvvater/Mononoke@refs/heads/master/Clash/Rules/AI.list",
    }
  Copilot_No_Resolve:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Copilot/Copilot_No_Resolve.yaml",
    }
  BardAI_No_Resolve:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/BardAI/BardAI_No_Resolve.yaml",
    }
  TikTok_No_Resolve:
    {
      <<: *class,
      url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/TikTok/TikTok_No_Resolve.yaml",
    }
  SteamCN_No_Resolve:
    {
      <<: *class,
      url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/SteamCN/SteamCN_No_Resolve.yaml",
    }
  Steam_No_Resolve:
    {
      <<: *class,
      url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Steam/Steam_No_Resolve.yaml",
    }
  Steam:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Steam/Steam.yaml",
    }
  OneDrive_No_Resolve:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OneDrive/OneDrive_No_Resolve.yaml",
    }
  Porn:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Porn.yaml",
    }
  GlobalMedia_Classical_No_Resolve:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia_Classical_No_Resolve.yaml",
    }
  Telegram_No_Resolve:
    {
      <<: *class,
      url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Telegram/Telegram_No_Resolve.yaml",
    }
  Twitter_No_Resolve:
    {
      <<: *class,
      url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Twitter/Twitter_No_Resolve.yaml",
    }
  Instagram_No_Resolve:
    {
      <<: *class,
      url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Instagram/Instagram_No_Resolve.yaml",
    }
  Facebook_No_Resolve:
    {
      <<: *class,
      url: "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Clash/Facebook/Facebook_No_Resolve.yaml",
    }
  Proxy_Classical:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Proxy/Proxy_Classical.yaml",
    }
  geolocation-!cn:
    {
      <<: *domain,
      url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs",
    }
  cn_domain:
    {
      <<: *domain,
      url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs",
    }
  cn_ip:
    {
      <<: *ip,
      url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs",
    }
  telegram_ip:
    {
      <<: *ip,
      url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs",
    }
  netflix_ip:
    {
      <<: *ip,
      url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs",
    }
  Epic_No_Resolve:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Epic/Epic_No_Resolve.yaml",
    }
  GameDownloadCN_No_Resolve:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN_No_Resolve.yaml",
    }
  Apple:
    {
      <<: *class,
      url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Apple/Apple_Classical_No_Resolve.yaml",
    }
